/* global describe expect test */
import { xSort } from '../x-sort'

describe('xSort', () => {
  test.each([
    // version only sorts
    [['1.0.1', '1.0.2'], ['1.0.1', '1.0.2']],
    [['1.0.2', '1.0.1'], ['1.0.1', '1.0.2']],
    // range only sorts
    [['1.0.x', '1.0.1-alpha.x'], ['1.0.1-alpha.x', '1.0.x']],
    [['*', '1.0.x', '1.x'], ['1.0.x', '1.x', '*']],
    // version vs range
    [['1.0.1', '1.0.x'], ['1.0.1', '1.0.x']],
    [['1.0.x', '1.0.1'], ['1.0.1', '1.0.x']],
    [['1.0.x', '1.0.2', '1.0.1', '1.x'], ['1.0.1', '1.0.2', '1.0.x', '1.x']],
    [['1.x', '1.0.x', '1.0.1'], ['1.0.1', '1.0.x', '1.x']],
    [['*', '1.0.0', '1.0.x', '1.x'], ['1.0.0', '1.0.x', '1.x', '*']],
    [['x', '1.0.0', '1.0.x', '1.x'], ['1.0.0', '1.0.x', '1.x', 'x']],
    [['x', '1.0.0', '2.0.x', '1.x'], ['1.0.0', '1.x', '2.0.x', 'x']],
    [
      ['1.0.0', '1.0.0-beta.1', '1.0.0-alpha.2', '1.0.0-rc.1'],
      ['1.0.0-alpha.2', '1.0.0-beta.1', '1.0.0-rc.1', '1.0.0']
    ],
    [['1.0.0-alpha.2', '1.0.0-alpha.1'], ['1.0.0-alpha.1', '1.0.0-alpha.2']],
    [['1.0.0-beta.x', '1.0.0-alpha.x'], ['1.0.0-alpha.x', '1.0.0-beta.x']],
    [['2.0.0', '1.x', '1.3.3', '1.2.x'],['1.2.x', '1.3.3', '1.x', '2.0.0']],
    [['1.0.0', '2.x', '2.2.x'],['1.0.0', '2.2.x', '2.x']],
  ])('%p => %p', (input, expected) => expect(xSort(input)).toEqual(expected))
})
